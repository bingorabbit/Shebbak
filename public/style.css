/* Space out content a bit */
body {
    padding-top: 20px;
    padding-bottom: 20px;
}

/* Everything but the jumbotron gets side spacing for mobile first views */
.header,
.footer {
    padding-right: 15px;
    padding-left: 15px;
}

/* Custom page header */
.header {
    padding-bottom: 20px;
    border-bottom: 1px solid #e5e5e5;
}
/* Make the masthead heading the same height as the navigation */
.header h3 {
    margin-top: 0;
    margin-bottom: 0;
    line-height: 40px;
}

.content {
    height: auto;
    margin-bottom: 39px;
}
/* Custom page footer */
.footer {
    color: #777;
    border-top: 1px solid #e5e5e5;
    position: fixed;
    bottom: 0;
    background-color: #fff;
    height: 70px;
}
.media {
    border-bottom: 1px solid #e5e5e5;
    padding-bottom: 1em;
}
/* Customize container */
@media (min-width: 768px) {
    .container {
        max-width: 730px;
    }
}
/* Responsive: Portrait tablets and up */
@media screen and (min-width: 768px) {
    /* Remove the padding we set earlier */
    .header,
    .footer {
        padding-right: 0;
        padding-left: 0;
    }
    /* Space out the masthead */
    .header {
        margin-bottom: 15px;
    }

}

span.fa-slack {
    font-size: 1em;
    -ms-transform: rotate(25deg);
    -webkit-transform: rotate(25deg);
    transform: rotate(25deg);
    margin-right: 0.1em;
}
input#hashtag {
    border: none;
    border-bottom: 1px #ddd solid;
    font-size:1.5em;
    height: 2em;
    font-style: italic;
    color: #868686;
    padding-left: 1.5em;

}
.row.hashtagform {
    margin: 0;
}
input#hashtag:focus {
    outline: none;
}
.hashsign {
    color: #868686;
    font-size: 2em !important;
    position: absolute;
    margin-top: 0.2em;
}
.alert {
    padding: 8px
}
/* Tweet Animation */
.animate-ng-enter,
.animate-ng-leave
{
    -webkit-transition: 300ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -moz-transition: 300ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -ms-transition: 300ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -o-transition: 300ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    transition: 300ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
}

.animate-ng-enter {
    top: -100%;
}
.animate-ng-enter.animate-ng-enter-active {
    top: 0;
}

.animate-ng-leave {
    top: 0;
}
.animate-ng-leave.animate-ng-leave-active{
    top: 100%;
}
/*
  We're using CSS transitions for when
  the enter and move events are triggered
  for the element that has the .repeated-item
  class
*/
.repeated-item.ng-enter, .repeated-item.ng-move {
    -webkit-transition:0.5s linear all;
    -moz-transition:0.5s linear all;
    -o-transition:0.5s linear all;
    transition:0.5s linear all;
    opacity:0;
}

/*
 The ng-enter-active and ng-move-active
 are where the transition destination properties
 are set so that the animation knows what to
 animate.
*/
.repeated-item.ng-enter.ng-enter-active,
.repeated-item.ng-move.ng-move-active {
    opacity:1;
}

/*
  We're using CSS keyframe animations for when
  the leave event is triggered for the element
  that has the .repeated-item class
*/
.repeated-item.ng-leave {
    -webkit-animation:0.5s my_animation;
    -moz-animation:0.5s my_animation;
    -o-animation:0.5s my_animation;
    animation:0.5s my_animation;
}

@keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

/*
  Unfortunately each browser vendor requires
  its own definition of keyframe animation code...
*/
@-webkit-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

@-moz-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

@-o-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}